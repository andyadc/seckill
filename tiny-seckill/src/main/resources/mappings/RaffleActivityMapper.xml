<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.andyadc.seckill.infrastructure.persistence.mapper.RaffleActivityMapper">
    <resultMap id="BaseResultMap" type="com.andyadc.seckill.infrastructure.persistence.entity.RaffleActivity">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="activity_id" jdbcType="INTEGER" property="activityId"/>
        <result column="activity_name" jdbcType="VARCHAR" property="activityName"/>
        <result column="activity_desc" jdbcType="VARCHAR" property="activityDesc"/>
        <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="stock_count" jdbcType="INTEGER" property="stockCount"/>
        <result column="stock_count_surplus" jdbcType="INTEGER" property="stockCountSurplus"/>
        <result column="activity_count_id" jdbcType="INTEGER" property="activityCountId"/>
        <result column="strategy_id" jdbcType="INTEGER" property="strategyId"/>
        <result column="state" jdbcType="VARCHAR" property="state"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, activity_id, activity_name, activity_desc, begin_time, end_time, stock_count,
        stock_count_surplus, activity_count_id, strategy_id, `state`, create_time, update_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from raffle_activity
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from raffle_activity
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="RaffleActivity">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into raffle_activity (activity_id, activity_name, activity_desc,
        begin_time, end_time, stock_count,
        stock_count_surplus, activity_count_id, strategy_id,
        `state`, create_time, update_time
        )
        values (#{activityId,jdbcType=INTEGER}, #{activityName,jdbcType=VARCHAR}, #{activityDesc,jdbcType=VARCHAR},
        #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{stockCount,jdbcType=INTEGER},
        #{stockCountSurplus,jdbcType=INTEGER}, #{activityCountId,jdbcType=INTEGER}, #{strategyId,jdbcType=INTEGER},
        #{state,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="insertSelective" parameterType="RaffleActivity">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into raffle_activity
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="activityId != null">
                activity_id,
            </if>
            <if test="activityName != null">
                activity_name,
            </if>
            <if test="activityDesc != null">
                activity_desc,
            </if>
            <if test="beginTime != null">
                begin_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="stockCount != null">
                stock_count,
            </if>
            <if test="stockCountSurplus != null">
                stock_count_surplus,
            </if>
            <if test="activityCountId != null">
                activity_count_id,
            </if>
            <if test="strategyId != null">
                strategy_id,
            </if>
            <if test="state != null">
                `state`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="activityId != null">
                #{activityId,jdbcType=INTEGER},
            </if>
            <if test="activityName != null">
                #{activityName,jdbcType=VARCHAR},
            </if>
            <if test="activityDesc != null">
                #{activityDesc,jdbcType=VARCHAR},
            </if>
            <if test="beginTime != null">
                #{beginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="stockCount != null">
                #{stockCount,jdbcType=INTEGER},
            </if>
            <if test="stockCountSurplus != null">
                #{stockCountSurplus,jdbcType=INTEGER},
            </if>
            <if test="activityCountId != null">
                #{activityCountId,jdbcType=INTEGER},
            </if>
            <if test="strategyId != null">
                #{strategyId,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="RaffleActivity">
        update raffle_activity
        <set>
            <if test="activityId != null">
                activity_id = #{activityId,jdbcType=INTEGER},
            </if>
            <if test="activityName != null">
                activity_name = #{activityName,jdbcType=VARCHAR},
            </if>
            <if test="activityDesc != null">
                activity_desc = #{activityDesc,jdbcType=VARCHAR},
            </if>
            <if test="beginTime != null">
                begin_time = #{beginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="stockCount != null">
                stock_count = #{stockCount,jdbcType=INTEGER},
            </if>
            <if test="stockCountSurplus != null">
                stock_count_surplus = #{stockCountSurplus,jdbcType=INTEGER},
            </if>
            <if test="activityCountId != null">
                activity_count_id = #{activityCountId,jdbcType=INTEGER},
            </if>
            <if test="strategyId != null">
                strategy_id = #{strategyId,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                `state` = #{state,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="RaffleActivity">
        update raffle_activity
        set activity_id = #{activityId,jdbcType=INTEGER},
        activity_name = #{activityName,jdbcType=VARCHAR},
        activity_desc = #{activityDesc,jdbcType=VARCHAR},
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
        end_time = #{endTime,jdbcType=TIMESTAMP},
        stock_count = #{stockCount,jdbcType=INTEGER},
        stock_count_surplus = #{stockCountSurplus,jdbcType=INTEGER},
        activity_count_id = #{activityCountId,jdbcType=INTEGER},
        strategy_id = #{strategyId,jdbcType=INTEGER},
        `state` = #{state,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>
